drivers = {'ANT', 'RUS'};
raceNums = 1:14;
inputFolder = 'C:\Users\berke\OneDrive\Masaüstü\GitHub\PU-Health-Monitor\Synthetic Race Data';
% Initialize health storage struct
lapHealth = struct();
startHealth = struct('ANT', 100, 'RUS', 100); % initial health for first race
for r = raceNums
    for d = 1:length(drivers)
        driver = drivers{d};
        % Load race data
        filename = fullfile(inputFolder, sprintf('%s_R%d_2025_Race_Data_Synthetic.csv', driver, r));
        data = readtable(filename);
        uniqueLaps = unique(data.LapNumber);
        healthLaps = zeros(length(uniqueLaps), 1);
        currentHealth = startHealth.(driver);
        for i = 1:length(uniqueLaps)
            lapNum = uniqueLaps(i);
            lapData = data(data.LapNumber == lapNum, :);
            lapPenalty = CalculateHealthScore(lapData);
            currentHealth = max(0, currentHealth - lapPenalty);
            healthLaps(i) = currentHealth;
        end

        startHealth.(driver) = healthLaps(end);
        lapHealth.(driver).(['Race' num2str(r)]) = healthLaps;
    end
end

% Choose a race to plot lap-by-lap health
raceToPlot = 1;

lapsANT = length(lapHealth.ANT.(['Race' num2str(raceToPlot)]));
lapsRUS = length(lapHealth.RUS.(['Race' num2str(raceToPlot)]));

% Plot lap-by-lap health for selected race
figure('Name', sprintf('Lap-by-Lap Health - Race %d', raceToPlot));
hold on;
plot(1:lapsANT, lapHealth.ANT.(['Race' num2str(raceToPlot)]), '-o', 'LineWidth', 2, 'DisplayName', 'ANT','Color','b');
plot(1:lapsRUS, lapHealth.RUS.(['Race' num2str(raceToPlot)]), '-x', 'LineWidth', 2, 'DisplayName', 'RUS','Color','k');
xlabel('Lap Number');
ylabel('Health Score');
title(sprintf('Lap-by-Lap Health Comparison - Race %d', raceToPlot));
legend('Location', 'best');
grid on;
hold off;

% Season final lap health arrays
finalHealthANT = zeros(length(raceNums), 1);
finalHealthRUS = zeros(length(raceNums), 1);

for r = raceNums
    finalHealthANT(r) = lapHealth.ANT.(['Race' num2str(r)])(end);
    finalHealthRUS(r) = lapHealth.RUS.(['Race' num2str(r)])(end);
end

% Plot season health progression
figure('Name', 'PU Health Progression');
hold on;
plot(raceNums, finalHealthANT, '-o', 'LineWidth', 2, 'DisplayName', 'ANT','Color','b');
plot(raceNums, finalHealthRUS, '-x', 'LineWidth', 2, 'DisplayName', 'RUS','Color','k');
xlabel('Race Number');
ylabel('Health Score');
title('Overall Season Health Progression');
legend('Location', 'best');
grid on;
hold off;